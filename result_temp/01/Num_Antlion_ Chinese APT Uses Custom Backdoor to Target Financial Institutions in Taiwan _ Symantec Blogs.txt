0: 2/10/22, 10:52 PM
1: (1) New Messages!
2: Antlion: Chinese APT Uses Custom Backdoor to Target Financial Institutionsin Taiwan
3: symantec-enterprise-blogs.security.com/blogs/threat-intelligence/china-apt-antlion-taiwan-financial-attacks
4: The attackers spent a significant amount of time on victim networks.
5: Chinese state-backed advanced persistent threat (APT) group Antlion has been targeting financial institutions in Taiwan in apersistent campaign over the course of at least 18 months.
6: The attackers deployed a custom backdoor we have called xPack on compromised systems, which gave them extensive access tovictim machines.
7: The backdoor allowed the attackers to run WMI commands remotely, while there is also evidence that they leveragedEternalBlue exploits in the backdoor.
8: The attackers appeared to have the ability to interact with SMB shares, and it's possiblethat they used mounted shares over SMB to transfer files from attacker-controlled infrastructure.
9: There is also evidence thatthe attackers were able to browse the web through the backdoor, likely using it as a proxy to mask their IP address.
10: The goal of this campaign appears to have been espionage, as we saw the attackers exfiltrating data and staging data forexfiltration from infected networks.
11: Technical details
12: As well as the attack on the financial institution outlined in the case study below, Antlion compromised the networks of at leasttwo other organizations in Taiwan, including another financial organization and a manufacturing company.
13: The activity thegroup carried out on those networks was largely similar to the activity that is detailed in the case study, with the xPackbackdoor frequently deployed and a lot of evidence of credential dumping.
14: In the manufacturing target, also, we see theattackers attempting to download malicious files via SMB shares.
15: The attackers also spent a significant amount of time on both these targeted networks, spending close to 250 days on thefinancial organization and around 175 days on the manufacturing organization.
16: Symantec, a division of Broadcom, cannot state with certainty what the initial infection vector used by the attackers in thiscampaign was, though in one instance they were seen utilizing the MSSQL service to execute system commands, whichindicates that the most likely infection vector was exploitation of a web application or service.
17: However, Antlion are also knownto have previously used malicious emails to gain initial access to victim networks.
18: The main custom backdoor used by Antlion in this campaign was the xPack backdoor, which is a custom .NET loader thatdecrypts (AES), loads, and executes accompanying .bin files.
19: Its decryption password is provided as a command-line argument(Base64 encoded string), and xPack is intended to be run as a standalone application or as a service (xPackSvc variant).
20: ThexPack malware and its associated payload seems to be used for initial access; it appears that xPack was predominantly used toexecute system commands, drop subsequent malware and tools, and stage data for exfiltration.
21: The attackers also used acustom keylogger and three custom loaders.
22: (1) New Messages!
23: EHAGBPSL loader - custom loader written in C++ - loaded by JpgRun loaderJpgRun loader - customer loader written in C++ - similar to xPack, reads the decryption key and filename from thecommand line - decodes the file and executes itCheckID - custom loader written in C++ - based on loader used by BlackHole RAT
24: The attackers also used a custom SMB session enumeration tool (NetSessionEnum), a custom bind/reverse file transfer toolnamed ENCODE MMC, and a Kerberos golden ticket tool based on Mimikatz.
25: The attackers also used a variety of off-the-shelf tools, as well as leveraging living-off-the-land tools such as PowerShell, WMIC,ProcDump, LSASS, and PsExec.
26: The legitimate AnyDesk tool was also abused by the attackers for remote access in one of thevictim organizations.
27: The attackers were also observed leveraging exploits such as CVE-2019-1458 for privilege escalation andremote scheduled tasks to execute their backdoor.
28: CVE-2019-1458 is an elevation-of-privilege vulnerability that occurs inWindows when the Win32k component fails to properly handle objects in memory.
29: Legitimate versions of WinRAR appear to have been exploited by the attackers for data exfiltration, while there is also evidenceof data exfiltration via PowerShell, specifically using the BitsTransfer module to initiate an upload to attacker-controlledinfrastructure.
30: There is also evidence that the attackers likely automated the data collection process via batch scripts, whilethere is also evidence of instances where data was likely staged for further exfiltration, though it was not actually observedbeing exfiltrated from the network.
31: In these instances, it appears the attackers were interested in collecting information fromsoftware pertaining to business contacts, investments, and smart card readers.
32: Case study: Attack on a financial organization
33: The attackers spent a significant amount of time on victims’ networks, and deployed both custom and off-the-shelf malware.
34: Inone financial sector victim in Taiwan the attackers spent almost nine months on the victim network.
35: The first suspicious activity on this victim network occurred in December 2020 when WMIC was used to execute twocommands:
36: wmic process get CSName,Description,ExecutablePath,ProcessId /format:”;CSIDL_SYSTEM\wbem\zh-tw\htable.xsl”;wmic os getname,version,InstallDate,LastBootUpTime,LocalDateTime,Manufacturer,RegisteredUser,ServicePackMajorVersion,SystemDirectory/format:”;CSIDL_SYSTEM\wbem\zh-tw\htable.xsl”;
37: The first command was used to list the computer name, description of processes, executable path, and process ID.
38: The outputwas written to a suspicious file named htable.xsl under the wbem directory.
39: The second command was used to collectinformation about the system, which was written out to the same file (htable.xsl).
40: Information collected included:
41: Version of the operating system (OS)The installation dateThe last time the system was bootedThe local date and time of the systemThe manufacturerThe registered userService pack information - this can be used to determine what patches are installedSystem directory path
42: Five minutes after those commands were issued, WMIC was used to dump credentials:
43: reg save HKLM\SAM CSIDL_COMMON_DOCUMENTS\sam.hivreg save HKLM\SYSTEM CSIDL_COMMON_DOCUMENTS\sys.hivreg save hklm\security CSIDL_COMMON_DOCUMENTS\security.hiv
44: The commands listed above were all executed via Antlion’s custom xPack backdoor.
45: Several days later, during the Christmas holiday period, the attackers returned over a period of a few days and executed thexPack backdoor again.
46: They also executed an unknown VBS script via PsExec multiple times:
47: “;cscript.exe”; CSIDL_SYSTEM_DRIVE\update.vbs
48: On December 28, the attackers used xPack to launch a command prompt to dump credentials from several machines within thecompromised organization with the following commands:
49: (1) New Messages!
50: upload.exe -accepteula -ma lsass.exe 16.dmp (a renamed version of Sysinternals procdump64.exe)reg save hklm\sam CSIDL_PROFILE\publicsam.hivereg save hklm\system CSIDL_PROFILE\public\system.hivereg save hklm\security CSIDL_PROFILE\public\security.hive
51: Over the following couple of weeks, the attackers continued to return intermittently to launch the xPack backdoor or to dumpcredentials via the registry.
52: Then, following a few weeks of inactivity, they become active on the infected network once again.
53: The attackers used the xPack backdoor to launch a command prompt to execute the following commands:
54: “;cmd”; /K CHCP 950CHCP 950query user“;CSIDL_SYSTEM\quser.exe”;tasklist /vfindstr explorercmd /c dir “;CSIDL_PROFILE\desktop”;CSIDL_SYSTEM\cmd.exe /c cmd /c dir \users /bcmd /c dir “;CSIDL_PROFILE\desktop”;cmd /c dir \users /breg save hklm\security CSIDL_COMMON_DOCUMENTS\security.hivrar a -r -hp1qaz@WSX3edc!
55: @# W22-009-099.tmp “;CSIDL_COMMON_DOCUMENTS\w22-009-099_file”;reg save hklm\system CSIDL_COMMON_DOCUMENTS\system.hivreg save hklm\sam CSIDL_COMMON_DOCUMENTS\sam.hiv
56: The above commands were used to firstly change the code page to 950, which is the Windows code page for TraditionalChinese.
57: The attackers then executed 'query user' to list any logged-in users on the system, as well as running ‘tasklist’ to get alist of all the running processes on the system.
58: They also tried to discover what processes were running, before listing allcontents of the Desktop directory and the Users directory.
59: After this, the attackers dumped credentials again via the registry.
60: The attackers returned to the network a couple of weeks later and carried out largely the same activity.
61: The attackers remainedactive on the network for March, April, and May 2021, intermittently returning to launch their xPack backdoor or dumpcredentials from the registry.
62: Dumping credentials appears to be a main focus of the attackers, with them likely using thesecredentials to move laterally across the network to identify machines of interest from which they can exfiltrate data.
63: The last activity on this network, after a gap of three months, occurred in August 2021, when the attackers returned and listedall available shares.
64: They then dumped credentials from the registry and proceeded to collect account, group, and workstationconfiguration information.
65: They then dumped credentials from the registry once again.
66: This was the last activity seen on this network.
67: Experienced actor stays active
68: Antlion is believed to have been involved in espionage activities since at least 2011, and this recent activity shows that it is stillan actor to be aware of more than 10 years after it first appeared.
69: The length of time that Antlion was able to spend on victim networks is notable, with the group able to spend several months onvictim networks, affording plenty of time to seek out and exfiltrate potentially sensitive information from infectedorganizations.
70: The targeting of Taiwan is perhaps unsurprising given we know Chinese state-backed groups tend to beinterested in organizations in that region.
71: Protection
72: For the latest protection updates, please visit the Symantec Protection Bulletin.
73: Indicators of Compromise (IOCs)
74: If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file.
75: Description
76: SHA2 85867a8b4de856a943dd5efaaf3b48aecd2082aa0ceba799df53ba479e4e81c5
77: checkID
78: (1) New Messages!
79: Description
80: SHA2 12425edb2c50eac79f06bf228cb2dd77bb1e847c4c4a2049c91e0c5b345df5f2
81: xPack
82: SHA2 e4a15537f767332a7ed08009f4e0c5a7b65e8cbd468eb81e3e20dc8dfc36aeed
83: xPack
84: SHA2 e488f0015f14a0eff4b756d10f252aa419bc960050a53cc04699d5cc8df86c8a
85: xPack
86: SHA2 9456d9a03f5084e44f8b3ad936b706a819ad1dd89e06ace612351b19685fef92
87: xPack
88: SHA2 730552898b4e99c7f8732a50ae7897fb5f83932d532a0b8151f3b9b13db7d73c
89: xPack
90: SHA2 de9bd941e92284770b46f1d764905106f2c678013d3793014bdad7776540a451
91: xPack
92: SHA2 390460900c318a9a5c9026208f9486af58b149d2ba98069007218973a6b0df66
93: xPack
94: SHA2 4331d1610cdedba314fc71b6bed35fea03bc49241eb908a70265c004f5701a29
95: xPack
96: SHA2 9b5168a8f2950e43148fe47576ab3ac5b2cfa8817b124691c50d2c77207f6586
97: xPack
98: SHA2 a74cb0127a793a7f4a616613c5aae72142c1166f4bb113247e734f0efd48bdba
99: xPack
100: SHA2 e5259b6527e8612f9fd9bba0b69920de3fd323a3711af39f2648686fa139bc38
101: xPack
102: SHA2 eb7a23136dc98715c0a3b88715aa7e936b88adab8ebae70253a5122b8a402df3 xPack
103: SHA2 789f0ec8e60fbc8645641a47bc821b11a4486f28892b6ce14f867a40247954ed
104: Keylogger
105: SHA2 3db621cac1d026714356501f558b1847212c91169314c1d43bfc3a4798467d0d
106: Keylogger
107: SHA2 443f4572ed2aec06d9fb3a190de21bfced37c0cd2ee03dd48a0a7be762858925
108: JpgRun
109: SHA2 f4534e04caced1243bd7a9ce7b3cd343bf8f558982cbabff93fa2796233fe929
110: JpgRun
111: SHA2 e968e0d7e62fbc36ad95bc7b140cf7c32cd0f02fd6f4f914eeb7c7b87528cfe2
112: EHAGBPSL
113: SHA2 0bbb477c1840e4a00d0b6cd3bd8121b23e1ce03a5ad738e9aa0e5e0b2e1e1fea EHAGBPSL
114: SHA2 55636c8a0baa9b57e52728c12dd969817815ba88ec8c8985bd20f23acd7f0537
115: EHAGBPSL
116: SHA2 2a541a06929dd7d18ddbae2cb23d5455d0666af7bdcdf45b498d1130a8434632
117: EHAGBPSL
118: SHA2 85867a8b4de856a943dd5efaaf3b48aecd2082aa0ceba799df53ba479e4e81c5
119: checkID
120: SHA2 29d7b82f9ae7fa0dbaf2d18c4d38d18028d652ed1ccc0846e8c781b4015b5f78
121: checkID
122: SHA2 f7cab241dac6e7db9369a4b85bd52904022055111be2fc413661239c3c64af3d
123: checkID
124: SHA2 2aa52776965b37668887a53dcd2374fc2460293b73c897de5d389b672e1313ff
125: checkID
126: SHA2 79a37464d889b41b7ea0a968d3e15e8923a4c0889f61410b94f5d02458cb9eed
127: checkID
128: SHA2 48d41507f5fc40a310fcd9148b790c29aeb9458ff45f789d091a9af114f26f43
129: NetSessionEnum
130: SHA2 f01a4841f022e96a5af613eb76c6b72293400e52787ab228e0abb862e5a86874 MMC
131: SHA2 e1a0c593c83e0b8873278fabceff6d772eeaaac96d10aba31fcf3992bc1410e5
132: SHA2 dfee6b3262e43d85f20f4ce2dfb69a8d0603bb261fb3dfa0b934543754d5128b
133: Mimikatz
134: Yara Rules
135: rule xpack_loader
136:     meta:
137: author = "Symantec, a division of Broadcom"
138:         hash = "12425edb2c50eac79f06bf228cb2dd77bb1e847c4c4a2049c91e0c5b345df5f2"
139: (1) New Messages!
140:     strings:
141:         $s1 = "Length or Hash destoryed" wide fullword
142:         $s2 = "tag unmatched" wide fullword
143:         $s3 = "File size mismatch" wide fullword
144:         $s4 = "DESFile" wide fullword
145:         $p1 = "fomsal.Properties.Resources.resources" wide fullword
146:         $p2 = "xPack.Properties.Resources.resources" wide fullword
147:         $p3 = "foslta.Properties.Resources.resources" wide fullword
148:     condition:
149:         uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($s*) or any of ($p*))
150: rule xpack_service
151:     meta:
152: author = "Symantec, a division of Broadcom"
153:         hash = "390460900c318a9a5c9026208f9486af58b149d2ba98069007218973a6b0df66"
154:     strings:
155:         $s1 = "C:\\Windows\\inf\\wdnvsc.inf" wide fullword
156:         $s2 = "PackService" wide fullword
157:         $s3 = "xPackSvc" wide fullword
158:         $s4 = "eG#!&5h8V$" wide fullword
159:     condition:
160:         uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 3 of them
161: rule EHAGBPSL_loader
162:     meta:
163: author = "Symantec, a division of Broadcom"
164:         hash = "e968e0d7e62fbc36ad95bc7b140cf7c32cd0f02fd6f4f914eeb7c7b87528cfe2"
165:         hash = "2a541a06929dd7d18ddbae2cb23d5455d0666af7bdcdf45b498d1130a8434632"
166:     strings:
167:         $s1 = {45 00 00 00 48 00 00 00 41 00 00 00 47 00 00 00 42 00 00 00 50 00 00 00 53 00 00 00 4C} // EHAGBPSL
168:         $s2 = {74 00 00 00 61 00 00 00 72 00 00 00 57 00 00 00 6F 00 00 00 6B} // tarWok
169:         $b1 = "bnRtZ3M=" fullword // ntmgs
170: (1) New Messages!
171:         $b2 = "TmV0d29yayBNYW5hZ2VtZW50IFNlcnZpY2U=" fullword // Network Management Service
172:         $b3 = "UHJvdmlkZXMgYWJpbGl0eSB0byBtYW5hZ2UgbmV0d29yayBvdmVyIHRoZSBuZXQgcHJvdG9jb2wu" fullword// Provides ability to manage network over the net protocol.
173:         $b4 = "bnRtZ3MuZG" // ntmgs.dll / ntmgs.dat
174:         $b5 = "aW1nMS5qcGc=" fullword // img1.jpg
175:         $c1 = "Wscms.nls" fullword
176:         $c2 = "Wscms.dat" fullword
177:         $c3 = "Wscms.dll" fullword
178:         $c4 = "Wscms.ini" fullword
179:         $c5 = "Images01.jpg" fullword
180:         $e1 = "StartWork" fullword
181:         $e2 = "ServiceMain" fullword
182:         $h1 = {DD 9C BD 72} // CreateRemoteThread
183:         $h2 = {C0 97 E2 EF} // OpenProcess
184:         $h3 = {32 6D C7 D5} // RegisterServiceCtrlHandlerA
185:         $h4 = {A1 6A 3D D8} // WriteProcessMemory
186:     condition:
187:         uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and all of ($e*) and (all of ($s*) or any of ($b*) or 3 of($c*) or all of ($h*))
188: rule keylogger
189:     meta:
190: author = "Symantec, a division of Broadcom"
191:         hash = "3db621cac1d026714356501f558b1847212c91169314c1d43bfc3a4798467d0d"
192:         hash = "789f0ec8e60fbc8645641a47bc821b11a4486f28892b6ce14f867a40247954ed"
193:     strings:
194:         $m1 = "BKB_Test" fullword
195:         $m2 = "KLG_sd76bxds1N" fullword
196:         $k1 = "[%d/%02d/%02d %02d:%02d:%02d K-E-Y-L-O-G]" fullword
197:         $k2 = "[%d/%02d/%02d %02d:%02d:%02d C-L-I-P-B-D]" fullword
198:         $k3 = "< Title--%s-- >" fullword
199:         $k4 = "ImpersonateLoggedOnUser Error(%d)" fullword
200:         $f1 = {55 73 65 72 ?
201: ?
202: ?
203: ?
204: ?
205: ?
206: 00 00 00 ?
207: ?
208: ?
209: ?
210: ?
211: ?
212: 6B 65 79 2E} // Userkey.
213:         $f2 = {55 73 65 72 ?
214: ?
215: ?
216: ?
217: ?
218: ?
219: 00 00 00 ?
220: ?
221: ?
222: ?
223: ?
224: ?
225: 64 61 74 2E} // Userdat.
226: (1) New Messages!
227:     condition:
228:         uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($k*) or (any of ($m*) and any of ($f*)))
229: rule checkid_loader
230:     meta:
231: author = "Symantec, a division of Broadcom"
232:         description = "BlackHole/BlackSwan / QuasarRAT/xClient loader"
233:         hash = "29d7b82f9ae7fa0dbaf2d18c4d38d18028d652ed1ccc0846e8c781b4015b5f78"
234:     strings:
235:         $s1 = "Call %s.%s(\"%s\") => %d" fullword wide
236:         $s2 = "Assembly::CreateInstance failed w/hr 0x%08lx" fullword wide
237:         $s3 = "checkID"
238:         $s4 = "NULL == checkID hMutex" fullword
239:         $s5 = "checkID Mutex ERROR_ALREADY_EXISTS" fullword
240:         $s6 = "dllmain mutex ERROR_ALREADY_EXISTS" fullword
241:         $x1 = "xClient.Program" fullword wide
242:         $x2 = "LoadPayload" fullword
243:         $m1 = "SFZJ_Wh16gJGFKL" ascii wide
244:         $m2 = "d5129799-e543-4b8b-bb1b-e0cba81bccf8" ascii wide
245:         $m3 = "USA_HardBlack" ascii wide
246:         $b1 = "BlackHole.Slave.Program" fullword wide
247:         $b2 = "NuGet\\Config" wide
248:         $b3 = "VisualStudio.cfi" wide
249:         $p = {E1 F6 3C AC AF AC AC AC A8 AC AC AC 53 53 AC AC 14}
250:         $t = "0s+Nksjd1czZ1drJktPO24aEjISMtsvLy5LJzNjdyNnL1dLY08uS39PRhoSMhIy2jYyPkomNko2IjJKEiIaEjISM"
251:     condition:
252:         uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 2 of ($s*) and (all of ($x*) or any of ($m*) or all of($b*) or $p or $t)
253: (1) New Messages!
254: About the Author
255: Threat Hunter Team
256: Symantec
257: The Threat Hunter Team is a group of security experts within Symantec whose mission is to investigate targeted attacks, driveenhanced protection in Symantec products, and offer analysis that helps customers respond to attacks.